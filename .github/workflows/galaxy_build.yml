name: Publish Ansible Galaxy Collection

on:
  push:
    branches:
      - main  # Ã„ndern Sie dies entsprechend Ihrem Hauptbranch

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install ansible[galaxy]

  build-and-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    #  - name: Set up Python
    #    uses: actions/setup-python@v2
    #    with:
    #      python-version: '3.x'
#
    #  - name: Install dependencies
    #    run: |
    #      pip install ansible[galaxy]
    #      
      - name: Update version in collection.yml
        run:  |
                ls -r -l
                bash ./utils/bash/update_version.sh ./galaxy.yml

        
      - name: Build collection
        run: ansible-galaxy collection build -vvv --output-path . --requirements-file requirements.txt --force
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}  # Stellen Sie sicher, dass GALAXY_API_KEY in Ihren Secrets gesetzt ist

      - name: Publish collection
        run: ansible-galaxy collection publish --api-key ${{ secrets.GALAXY_API_KEY }} ./ji_podhead-ilohelper-*.tar.gz
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
